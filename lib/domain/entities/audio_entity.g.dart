// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'audio_entity.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

_$AudioTrackImpl _$$AudioTrackImplFromJson(Map<String, dynamic> json) =>
    _$AudioTrackImpl(
      id: json['id'] as String,
      duaId: json['duaId'] as String,
      title: json['title'] as String,
      reciter: json['reciter'] as String,
      language: json['language'] as String,
      quality: $enumDecode(_$AudioQualityEnumMap, json['quality']),
      url: json['url'] as String,
      duration: Duration(microseconds: (json['duration'] as num).toInt()),
      fileSizeBytes: (json['fileSizeBytes'] as num).toInt(),
      ragConfidenceScore: (json['ragConfidenceScore'] as num).toDouble(),
      localPath: json['localPath'] as String?,
      checksumMd5: json['checksumMd5'] as String?,
      isDownloaded: json['isDownloaded'] as bool? ?? false,
      isDownloading: json['isDownloading'] as bool? ?? false,
      downloadProgress: (json['downloadProgress'] as num?)?.toDouble() ?? 0.0,
      lastAccessed:
          json['lastAccessed'] == null
              ? null
              : DateTime.parse(json['lastAccessed'] as String),
      downloadedAt:
          json['downloadedAt'] == null
              ? null
              : DateTime.parse(json['downloadedAt'] as String),
      tags:
          (json['tags'] as List<dynamic>?)?.map((e) => e as String).toList() ??
          const [],
      metadata: json['metadata'] as Map<String, dynamic>?,
    );

Map<String, dynamic> _$$AudioTrackImplToJson(_$AudioTrackImpl instance) =>
    <String, dynamic>{
      'id': instance.id,
      'duaId': instance.duaId,
      'title': instance.title,
      'reciter': instance.reciter,
      'language': instance.language,
      'quality': _$AudioQualityEnumMap[instance.quality]!,
      'url': instance.url,
      'duration': instance.duration.inMicroseconds,
      'fileSizeBytes': instance.fileSizeBytes,
      'ragConfidenceScore': instance.ragConfidenceScore,
      'localPath': instance.localPath,
      'checksumMd5': instance.checksumMd5,
      'isDownloaded': instance.isDownloaded,
      'isDownloading': instance.isDownloading,
      'downloadProgress': instance.downloadProgress,
      'lastAccessed': instance.lastAccessed?.toIso8601String(),
      'downloadedAt': instance.downloadedAt?.toIso8601String(),
      'tags': instance.tags,
      'metadata': instance.metadata,
    };

const _$AudioQualityEnumMap = {
  AudioQuality.low: 'low',
  AudioQuality.medium: 'medium',
  AudioQuality.high: 'high',
  AudioQuality.lossless: 'lossless',
};

_$PlaylistImpl _$$PlaylistImplFromJson(Map<String, dynamic> json) =>
    _$PlaylistImpl(
      id: json['id'] as String,
      name: json['name'] as String,
      description: json['description'] as String,
      trackIds:
          (json['trackIds'] as List<dynamic>).map((e) => e as String).toList(),
      type: $enumDecode(_$PlaylistTypeEnumMap, json['type']),
      createdAt: DateTime.parse(json['createdAt'] as String),
      lastModified:
          json['lastModified'] == null
              ? null
              : DateTime.parse(json['lastModified'] as String),
      coverImageUrl: json['coverImageUrl'] as String?,
      isAutoGenerated: json['isAutoGenerated'] as bool? ?? false,
      averageRagScore: (json['averageRagScore'] as num?)?.toDouble(),
      ragMetadata: json['ragMetadata'] as Map<String, dynamic>?,
    );

Map<String, dynamic> _$$PlaylistImplToJson(_$PlaylistImpl instance) =>
    <String, dynamic>{
      'id': instance.id,
      'name': instance.name,
      'description': instance.description,
      'trackIds': instance.trackIds,
      'type': _$PlaylistTypeEnumMap[instance.type]!,
      'createdAt': instance.createdAt.toIso8601String(),
      'lastModified': instance.lastModified?.toIso8601String(),
      'coverImageUrl': instance.coverImageUrl,
      'isAutoGenerated': instance.isAutoGenerated,
      'averageRagScore': instance.averageRagScore,
      'ragMetadata': instance.ragMetadata,
    };

const _$PlaylistTypeEnumMap = {
  PlaylistType.userCreated: 'user_created',
  PlaylistType.ragRecommended: 'rag_recommended',
  PlaylistType.recent: 'recent',
  PlaylistType.favorites: 'favorites',
  PlaylistType.downloaded: 'downloaded',
};

_$AudioCacheItemImpl _$$AudioCacheItemImplFromJson(Map<String, dynamic> json) =>
    _$AudioCacheItemImpl(
      trackId: json['trackId'] as String,
      localPath: json['localPath'] as String,
      fileSizeBytes: (json['fileSizeBytes'] as num).toInt(),
      cachedAt: DateTime.parse(json['cachedAt'] as String),
      checksumMd5: json['checksumMd5'] as String,
      accessCount: (json['accessCount'] as num).toInt(),
      lastAccessed:
          json['lastAccessed'] == null
              ? null
              : DateTime.parse(json['lastAccessed'] as String),
      status:
          $enumDecodeNullable(_$CacheStatusEnumMap, json['status']) ??
          CacheStatus.cached,
      priority:
          $enumDecodeNullable(_$CachePriorityEnumMap, json['priority']) ??
          CachePriority.normal,
    );

Map<String, dynamic> _$$AudioCacheItemImplToJson(
  _$AudioCacheItemImpl instance,
) => <String, dynamic>{
  'trackId': instance.trackId,
  'localPath': instance.localPath,
  'fileSizeBytes': instance.fileSizeBytes,
  'cachedAt': instance.cachedAt.toIso8601String(),
  'checksumMd5': instance.checksumMd5,
  'accessCount': instance.accessCount,
  'lastAccessed': instance.lastAccessed?.toIso8601String(),
  'status': _$CacheStatusEnumMap[instance.status]!,
  'priority': _$CachePriorityEnumMap[instance.priority]!,
};

const _$CacheStatusEnumMap = {
  CacheStatus.cached: 'cached',
  CacheStatus.corrupted: 'corrupted',
  CacheStatus.expired: 'expired',
};

const _$CachePriorityEnumMap = {
  CachePriority.low: 'low',
  CachePriority.normal: 'normal',
  CachePriority.high: 'high',
  CachePriority.critical: 'critical',
};

_$AudioDownloadJobImpl _$$AudioDownloadJobImplFromJson(
  Map<String, dynamic> json,
) => _$AudioDownloadJobImpl(
  id: json['id'] as String,
  trackId: json['trackId'] as String,
  url: json['url'] as String,
  targetPath: json['targetPath'] as String,
  priority: $enumDecode(_$DownloadPriorityEnumMap, json['priority']),
  queuedAt: DateTime.parse(json['queuedAt'] as String),
  status:
      $enumDecodeNullable(_$DownloadStatusEnumMap, json['status']) ??
      DownloadStatus.queued,
  progress: (json['progress'] as num?)?.toDouble() ?? 0.0,
  bytesDownloaded: (json['bytesDownloaded'] as num?)?.toInt() ?? 0,
  totalBytes: (json['totalBytes'] as num?)?.toInt() ?? 0,
  startedAt:
      json['startedAt'] == null
          ? null
          : DateTime.parse(json['startedAt'] as String),
  completedAt:
      json['completedAt'] == null
          ? null
          : DateTime.parse(json['completedAt'] as String),
  errorMessage: json['errorMessage'] as String?,
  retryCount: (json['retryCount'] as num?)?.toInt() ?? 0,
);

Map<String, dynamic> _$$AudioDownloadJobImplToJson(
  _$AudioDownloadJobImpl instance,
) => <String, dynamic>{
  'id': instance.id,
  'trackId': instance.trackId,
  'url': instance.url,
  'targetPath': instance.targetPath,
  'priority': _$DownloadPriorityEnumMap[instance.priority]!,
  'queuedAt': instance.queuedAt.toIso8601String(),
  'status': _$DownloadStatusEnumMap[instance.status]!,
  'progress': instance.progress,
  'bytesDownloaded': instance.bytesDownloaded,
  'totalBytes': instance.totalBytes,
  'startedAt': instance.startedAt?.toIso8601String(),
  'completedAt': instance.completedAt?.toIso8601String(),
  'errorMessage': instance.errorMessage,
  'retryCount': instance.retryCount,
};

const _$DownloadPriorityEnumMap = {
  DownloadPriority.low: 'low',
  DownloadPriority.normal: 'normal',
  DownloadPriority.high: 'high',
  DownloadPriority.urgent: 'urgent',
};

const _$DownloadStatusEnumMap = {
  DownloadStatus.queued: 'queued',
  DownloadStatus.downloading: 'downloading',
  DownloadStatus.completed: 'completed',
  DownloadStatus.failed: 'failed',
  DownloadStatus.cancelled: 'cancelled',
  DownloadStatus.paused: 'paused',
};

_$AudioPlaybackStateImpl _$$AudioPlaybackStateImplFromJson(
  Map<String, dynamic> json,
) => _$AudioPlaybackStateImpl(
  currentTrackId: json['currentTrackId'] as String?,
  playerState:
      $enumDecodeNullable(_$PlayerStateEnumMap, json['playerState']) ??
      PlayerState.stopped,
  position:
      json['position'] == null
          ? Duration.zero
          : Duration(microseconds: (json['position'] as num).toInt()),
  duration:
      json['duration'] == null
          ? Duration.zero
          : Duration(microseconds: (json['duration'] as num).toInt()),
  speed: (json['speed'] as num?)?.toDouble() ?? 1.0,
  repeatMode:
      $enumDecodeNullable(_$RepeatModeEnumMap, json['repeatMode']) ??
      RepeatMode.none,
  isShuffling: json['isShuffling'] as bool? ?? false,
  queue:
      (json['queue'] as List<dynamic>?)?.map((e) => e as String).toList() ??
      const [],
  currentIndex: (json['currentIndex'] as num?)?.toInt() ?? 0,
  volume: (json['volume'] as num?)?.toDouble() ?? 1.0,
  isMuted: json['isMuted'] as bool? ?? false,
);

Map<String, dynamic> _$$AudioPlaybackStateImplToJson(
  _$AudioPlaybackStateImpl instance,
) => <String, dynamic>{
  'currentTrackId': instance.currentTrackId,
  'playerState': _$PlayerStateEnumMap[instance.playerState]!,
  'position': instance.position.inMicroseconds,
  'duration': instance.duration.inMicroseconds,
  'speed': instance.speed,
  'repeatMode': _$RepeatModeEnumMap[instance.repeatMode]!,
  'isShuffling': instance.isShuffling,
  'queue': instance.queue,
  'currentIndex': instance.currentIndex,
  'volume': instance.volume,
  'isMuted': instance.isMuted,
};

const _$PlayerStateEnumMap = {
  PlayerState.stopped: 'stopped',
  PlayerState.playing: 'playing',
  PlayerState.paused: 'paused',
  PlayerState.buffering: 'buffering',
  PlayerState.error: 'error',
};

const _$RepeatModeEnumMap = {
  RepeatMode.none: 'none',
  RepeatMode.one: 'one',
  RepeatMode.all: 'all',
};
